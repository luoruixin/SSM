<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--1、按类型（常用）
    2、按名称
    3、按构造方法
    4、不启用自动装配-->

<!--    自动装配用于引用类型依赖注入，不能对简单类型进行操作
使用按类型装配时（byType)必须保障容器中相同类型的bean唯一，推荐使用
使用按名称装配时（byName)必须保障容器中具有指定名称的bean,因变量名与配置耦合，不推荐使用
自动装配优先级低于setter注入与构造器注入，同时出现时自动装配配置失效-->

<!--    byType和byName是针对setter进行DI注入的-->
<!--    一：注入基本类型-->
    <bean id="bookDao" class="com.itheima.dao.impl.BookDaoImpl">
<!--        1、使用setter方法注入-->
<!--        <property name="databaseName" value="mysql"/>-->
<!--        <property name="connectionNum" value="100"/>-->

        <!--        2、构造方法注入-->
        <constructor-arg name="connectionNum" value="100"/>
        <constructor-arg name="databaseName" value="mysql"/>

        <!--        2、构造方法注入（根据类型）-->
<!--        <constructor-arg type="int" value="100"/>-->
<!--        <constructor-arg type="java.lang.String" value="mysql"/>-->

        <!--        2、构造方法注入（根据参数位置）-->
<!--        <constructor-arg index="1" value="100"/>-->
<!--        <constructor-arg index="0" value="mysql"/>-->
     </bean>
    <bean id="userDao" class="com.itheima.dao.impl.UserDaoImpl"/>

<!--    二、注入引用类型-->
    <bean id="bookService" class="com.itheima.service.impl.BookServiceImpl" autowire="byType">   <!--这里使用了自动装配-->
<!--       1、使用setter方法注入-->
<!--        <property name="bookDao" ref="bookDao"/>-->
<!--        <property name="userDao" ref="userDao"/>-->

<!--        2、构造方法注入-->
<!--        <constructor-arg name="bookDao" ref="bookDao"/>    &lt;!&ndash;注意这里的name是形参的名称&ndash;&gt;-->
<!--        <constructor-arg name="userDao" ref="userDao"/>-->
    </bean>

</beans>
