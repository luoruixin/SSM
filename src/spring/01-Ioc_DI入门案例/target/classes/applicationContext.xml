<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    bean标签标示配置bean-->
<!--    id属性标示给bean起名字-->
<!--    class属性表示给bean定义类型-->
    <bean id="bookDao" name="dao dao2" class="dao.impl.BookDaoImpl" scope="singleton">
<!--        1、setter方法进行DI注入（基本数据类型）-->
<!--        <property name="databaseName" value="mysql"/>-->
<!--        <property name="connectionNum" value="10"/>&lt;!&ndash;配置简单数据类型使用value&ndash;&gt;-->

<!--        2、构造方法进行DI注入（基本数据类型）-->
        <constructor-arg name="connectionNum" value="100"/>
        <constructor-arg name="databaseName" value="mysql"/>

    </bean><!--scope是范围  singleton表示单例，防止重复调用-->

    <bean id="userDao" name="dao3" class="dao.impl.UserDaoImpl"/>

    <bean id="bookService" name="service" class="service.impl.BookServiceImpl"><!--name中写入别名-->
<!--        配置server与dao的关系-->
<!--        property标签表示配置当前bean的属性-->
<!--        name表示配置哪一个具体的属性-->
<!--        ref表示参照哪一个bean-->

<!--        1、setter方法进行DI注入（引用类型）-->
<!--        <property name="bookDao" ref="bookDao"/>&lt;!&ndash;注意这两个bookDao不是同一个意思&ndash;&gt;-->
<!--        <property name="userDao" ref="userDao"/>-->

<!--        2、构造方法进行DI注入（引用类型）-->
        <constructor-arg name="bookDao1" ref="bookDao"/>
        <constructor-arg name="userDao1" ref="userDao"/>
    </bean>

</beans>